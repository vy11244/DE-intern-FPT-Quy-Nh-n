
--   The query is done to convert from bronze data into silver data
--      Database: WideWorldImporters
--      Module: STOCKHOLDING
--      Contributed Bronze Table: STOCKHOLDING.STOCKHOLDING_BRONZE.STOCKITEMS,STOCKHOLDING.STOCKHOLDING_BRONZE.STOCKITEMHOLDINGS
--      Silver table: STOCKHOLDING.STOCKHOLDING_SILVER.STOCKHOLDING
--      Done by: VyCK
--      Last update when: 2024-03-14 06:38:00.0000000

-- Merge data into the STOCKHOLDING table
MERGE INTO STOCKHOLDING.STOCKHOLDING_SILVER.STOCKHOLDING AS Target
USING (
    -- Select data to merge from other tables
    SELECT
        T2.STOCKITEMKEY AS STOCKITEMKEY,
        T1.QUANTITYONHAND AS QUANTITYONHAND,
        T1.BINLOCATION AS BINLOCATION,
        T1.LASTSTOCKTAKEQUANTITY AS LASTSTOCKTAKEQUANTITY,
        FLOOR(T1.LASTCOSTPRICE) AS LASTCOSTPRICE,
        T1.REORDERLEVEL AS REORDERLEVEL,
        T1.TARGETSTOCKLEVEL AS TARGETSTOCKLEVEL
    FROM
        STOCKHOLDING.STOCKHOLDING_BRONZE.STOCKITEMHOLDINGS AS T1
    INNER JOIN
        STOCKHOLDING.STOCKHOLDING_SILVER.STOCKITEM AS T2 ON T1.STOCKITEMID = T2.WWISTOCKITEMID
        AND T1.LASTEDITEDWHEN < T2.ValidTo AND T1.LASTEDITEDWHEN >= T2.ValidFrom
) AS Source
ON Target.STOCKITEMKEY = Source.STOCKITEMKEY
WHEN MATCHED THEN
    -- Update existing records when matched
    UPDATE SET
        Target.QUANTITYONHAND = Source.QUANTITYONHAND,
        Target.BINLOCATION = Source.BINLOCATION,
        Target.LASTSTOCKTAKEQUANTITY = Source.LASTSTOCKTAKEQUANTITY,
        Target.LASTCOSTPRICE = Source.LASTCOSTPRICE,
        Target.REORDERLEVEL = Source.REORDERLEVEL,
        Target.TARGETSTOCKLEVEL = Source.TARGETSTOCKLEVEL
WHEN NOT MATCHED THEN
    -- Insert new records when not matched
    INSERT (STOCKITEMKEY, QUANTITYONHAND, BINLOCATION, LASTSTOCKTAKEQUANTITY, LASTCOSTPRICE, REORDERLEVEL, TARGETSTOCKLEVEL)
    VALUES (Source.STOCKITEMKEY, Source.QUANTITYONHAND, Source.BINLOCATION, Source.LASTSTOCKTAKEQUANTITY, Source.LASTCOSTPRICE, Source.REORDERLEVEL, Source.TARGETSTOCKLEVEL);
